Operating Systems
LAB7
Michelle Bergin

PART1

1) user/ in os161
2) testbin/'name of program'
4) f_test appears to be running up to 4. The original process to run the program then it appears to fork off 3 times?
5) The os runs as a thread. It creates the initial process but the os runs as kernel threads
6) Yes
7) You could
8) ??
9) syscall.h
10) same
11) ??
12 - 14) It's a trap. An interrupt. Used for going from User to Kernel etc.
15) 
16) 
17) 
Teacher Hints from class: enter_forked_process and enter_user_process

My code for the gettime
/* Getting time
 * Michelle Bergin
 */

#include <unistd.h>
#include <stdio.h>
#include <time.h>

// 31540000
// 2628000
// 86400
// 3600
// 60
// 1

int main(){
	time_t t;
	time(&t);
	int start;
	start = t;
	int year = (start / 31540000) + 1970;
	start = (start % 31540000);
	int month = start / 2628000;
	start = (start % 2628000);
	int day = start / 86400;
	start = (start % 86400);
	int hour = start / 3600;
	start = (start % 3600);
	int minute = start / 60;
	start = (start % 60);
	int second = start;

	printf("test %d/%d/%d %d:%d %d seconds\n", year, month, day, hour, minute, second);
	return 0;
}

My code for getpid which returns 1 because that was how it is programmed for now in the stub

#include <unistd.h>
#include <stdio.h>

int main(){
	int uhhh = getpid();
	printf("Uhhh %d\n", uhhh);
	return 0;
}
